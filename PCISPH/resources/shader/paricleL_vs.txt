#version 330 core

layout(location=0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout(location=3) in mat4 instanceWorld;

out vec3 FragPos;
out vec3 Normal;
out vec3 LightPos;

out float height;

uniform vec3 lightPos;

uniform mat4 proj,view;

void main(){
	gl_Position = proj * view * instanceWorld * vec4(aPos,1.0f);
	FragPos = vec3(view * instanceWorld * vec4(aPos, 1.0));
    	Normal = mat3(transpose(inverse(view * instanceWorld))) * aNormal;
	LightPos = vec3(view * vec4(lightPos, 1.0));
	
	height =  (instanceWorld * vec4(aPos,1.0f)).y;

}
