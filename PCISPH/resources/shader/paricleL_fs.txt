#version 330 core

out vec4 FragColor;

in vec3 FragPos;
in vec3 Normal;
in vec3 LightPos;
in float height;
in float density;


void main(){

	vec3 objectColor = vec3(0.4, 0.4 ,1);

	if(height>0.5f){
		objectColor = vec3(0.5, 0.5 ,0.8);
	}
	if(height>1.0f){
		objectColor = vec3(0.3, 0.3,0.6);
	}

	if(density>562.313f - 0.001f && density<562.313f + 0.001f ){
		objectColor = vec3(1.0,0.0,0.0);
	}


	float ambientStrength = 0.1;
    	vec3 ambient = ambientStrength * vec3(1,1,1);
	
	vec3 norm = normalize(Normal);
    	vec3 lightDir = normalize(LightPos - FragPos);

	float diff = max(dot(norm, lightDir), 0.0);
    	vec3 diffuse = diff* vec3(1,1,1);

	float specularStrength = 0.5;
    	vec3 viewDir = normalize(-FragPos);
	
	vec3 reflectDir = reflect(-lightDir, norm);
	float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32);
    	vec3 specular = specularStrength * spec * vec3(1,1,1);
	
	
	vec3 result = (ambient + diffuse + specular) * objectColor;
	
    	FragColor = vec4(result, 1.0f);
	

}